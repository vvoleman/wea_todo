version: '3.8'
services:
    app:
        build: .
        links:
            - postgres
        depends_on:
            # Our app does not work without our database
            # so this ensures our database is loaded first
            - postgres
        ports:
            - '3000:3000'
        volumes:
            # Maps our current project directory `.` to
            # our working directory in the container
            - ./:/usr/src/app/
            # node_modules workaround for volumes
            # https://stackoverflow.com/a/32785014
            - /usr/src/app/node_modules
    postgres:
        image: postgres:14.1-alpine
        restart: always
        environment:
            # You can set the value of environment variables
            # in your docker-compose.yml file
            # Our Node app will use these to connect
            # to the database
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
            - POSTGRES_DB=todos
        ports:
            # Standard port for PostgreSQL databases
            - "5432:5432"
        volumes:
            # When the PostgresSQL container is started it will run any scripts
            # provided in the `docker-entrypoint-initdb.d` directory, this connects
            # our seed file to that directory so that it gets run
            - ./db.sql:/docker-entrypoint-initdb.d/database-seed.sql

    # PostgreSQL pgAdmin panel accessible at http://localhost:16543/
    pgadmin-compose:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: "test@test.com"
            PGADMIN_DEFAULT_PASSWORD: "heslo123"
        ports:
            - "16543:80"
        depends_on:
            - postgres